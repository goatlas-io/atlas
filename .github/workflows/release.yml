name: release

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main

jobs:
  version:
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'renovate') == false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Detect Version for Docker
        id: docker-version
        run: echo ::set-output name=VERSION::$(SEP="-" .ci/version)
      - name: Detect Version
        id: version
        run: echo ::set-output name=VERSION::$(.ci/version)
    outputs:
      docker-version: ${{ steps.docker-version.outputs.VERSION }}
      version: ${{ steps.version.outputs.VERSION }}

  goreleaser:
    runs-on: ubuntu-latest
    needs:
      - version
    env:
      SUMMARY: ${{ needs.version.outputs.docker-version }}
      VERSION: ${{ needs.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        if: startsWith(github.ref , 'refs/tags/v') == true
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: ${{ steps.extract_branch.outputs.branch }}
      - name: Run GoReleaser in Snapshot Mode
        uses: goreleaser/goreleaser-action@v2
        if: startsWith(github.ref , 'refs/tags/v') == false
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: ${{ steps.extract_branch.outputs.branch }}
          GORELEASER_CURRENT_TAG: ${{ needs.version.outputs.docker-version }}
      - name: Push Snapshot Docker Image
        if: startsWith(github.ref , 'refs/tags/v') == false
        run: |
          docker push $(docker images -a  | grep goatlas | awk '{ print $1 ":" $2 }')
      - name: Artifact Upload
        uses: actions/upload-artifact@v2
        if: startsWith(github.ref , 'refs/tags/v') == false
        with:
          name: release
          path: |
            release/*.tar.gz
            release/config.yaml
            release/checksums.txt
